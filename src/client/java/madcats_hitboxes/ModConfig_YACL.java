package madcats_hitboxes;

import dev.isxander.yacl3.api.*;
import dev.isxander.yacl3.api.controller.BooleanControllerBuilder;
import dev.isxander.yacl3.api.controller.TickBoxControllerBuilder;
import me.shedaniel.autoconfig.AutoConfig;
import net.minecraft.client.gui.screen.Screen;
import net.minecraft.text.Text;
import net.minecraft.text.TextColor;


public class ModConfig_YACL {


    public static Screen createGui(Screen parentScreen) {

        ModConfig config = AutoConfig.getConfigHolder(ModConfig.class).getConfig();


        final Screen screen = YetAnotherConfigLib.createBuilder()
                .title(Text.literal("Configure MadCat's Hitboxes"))
                .save(() -> AutoConfig.getConfigHolder(ModConfig.class).save())
                .category(ConfigCategory.createBuilder()
                        .name(Text.literal("General"))
                        .option(Option.<Boolean>createBuilder()
                                .name(Text.literal("Enable").styled(style -> style.withColor(TextColor.fromRgb(0x00B3DC))))
                                .description(OptionDescription.of(Text.literal("Enable the mod")))
                                .binding(config.Enabled, () -> config.Enabled, newVal -> config.Enabled = newVal)
                                .controller(opt -> BooleanControllerBuilder.create(opt)
                                .formatValue(val -> val? Text.literal("Enabled") : Text.literal("Disabled"))
                                        .coloured(true))
                                .build())
                        .option(Option.<Boolean>createBuilder()
                                .name(Text.literal("Show Self"))
                                .description(OptionDescription.of(Text.literal("Show your own hitbox")))
                                .binding(config.Enabled, () -> config.ShowSelf, newVal -> config.ShowSelf = newVal)
                                .controller(TickBoxControllerBuilder::create)
                                .build())
                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Player states"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Elytra"))
                                        .description(OptionDescription.of(Text.literal("Show the hitbox while in elytra mode")))
                                        .binding(
                                                config.playerOption.showElytra,
                                                () -> config.playerOption.showElytra,
                                                newVal -> config.playerOption.showElytra = newVal)

                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Swimming"))
                                        .description(OptionDescription.of(Text.literal("Show the hitbox while in swimming or crawling mode")))
                                        .binding(config.playerOption.showSwimming, () -> config.playerOption.showSwimming,
                                                newVal -> config.playerOption.showSwimming = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Sneaking"))
                                        .description(OptionDescription.of(Text.literal("Show the hitbox while sneaking")))
                                        .binding(config.playerOption.showSneaking, () -> config.playerOption.showSneaking,
                                                newVal -> config.playerOption.showSneaking = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Sleeping"))
                                        .description(OptionDescription.of(Text.literal("Show the hitbox while sleeping in a bed")))
                                        .binding(config.playerOption.showSleeping, () -> config.playerOption.showSleeping,
                                                newVal -> config.playerOption.showSleeping = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Standing"))
                                        .description(OptionDescription.of(Text.literal("Show the hitbox while standing (strictly: not doing any of the above)")))
                                        .binding(config.playerOption.showStanding, () -> config.playerOption.showStanding,
                                                newVal -> config.playerOption.showStanding = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())









                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Passive mobs"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Allay"))
                                        .binding(config.mobsOption.passive.allay, () -> config.mobsOption.passive.allay, newVal -> config.mobsOption.passive.allay = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Armadillo"))
                                        .binding(config.mobsOption.passive.armadillo, () -> config.mobsOption.passive.armadillo, newVal -> config.mobsOption.passive.armadillo = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Axolotl"))
                                        .binding(config.mobsOption.passive.axolotl, () -> config.mobsOption.passive.axolotl, newVal -> config.mobsOption.passive.axolotl = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Bat"))
                                        .binding(config.mobsOption.passive.bat, () -> config.mobsOption.passive.bat, newVal -> config.mobsOption.passive.bat = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Bee"))
                                        .binding(config.mobsOption.passive.bee, () -> config.mobsOption.passive.bee, newVal -> config.mobsOption.passive.bee = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Camel"))
                                        .binding(config.mobsOption.passive.camel, () -> config.mobsOption.passive.camel, newVal -> config.mobsOption.passive.camel = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cat"))
                                        .binding(config.mobsOption.passive.cat, () -> config.mobsOption.passive.cat, newVal -> config.mobsOption.passive.cat = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Chicken"))
                                        .binding(config.mobsOption.passive.chicken, () -> config.mobsOption.passive.chicken, newVal -> config.mobsOption.passive.chicken = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cod"))
                                        .binding(config.mobsOption.passive.cod, () -> config.mobsOption.passive.cod, newVal -> config.mobsOption.passive.cod = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cow"))
                                        .binding(config.mobsOption.passive.cow, () -> config.mobsOption.passive.cow, newVal -> config.mobsOption.passive.cow = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Dolphin"))
                                        .binding(config.mobsOption.passive.dolphin, () -> config.mobsOption.passive.dolphin, newVal -> config.mobsOption.passive.dolphin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Donkey"))
                                        .binding(config.mobsOption.passive.donkey, () -> config.mobsOption.passive.donkey, newVal -> config.mobsOption.passive.donkey = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Fox"))
                                        .binding(config.mobsOption.passive.fox, () -> config.mobsOption.passive.fox, newVal -> config.mobsOption.passive.fox = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Frog"))
                                        .binding(config.mobsOption.passive.frog, () -> config.mobsOption.passive.frog, newVal -> config.mobsOption.passive.frog = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Glow Squid"))
                                        .binding(config.mobsOption.passive.glowSquid, () -> config.mobsOption.passive.glowSquid, newVal -> config.mobsOption.passive.glowSquid = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Goat"))
                                        .binding(config.mobsOption.passive.goat, () -> config.mobsOption.passive.goat, newVal -> config.mobsOption.passive.goat = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Horse"))
                                        .binding(config.mobsOption.passive.horse, () -> config.mobsOption.passive.horse, newVal -> config.mobsOption.passive.horse = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Llama"))
                                        .binding(config.mobsOption.passive.llama, () -> config.mobsOption.passive.llama, newVal -> config.mobsOption.passive.llama = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Mooshroom"))
                                        .binding(config.mobsOption.passive.mooshroom, () -> config.mobsOption.passive.mooshroom, newVal -> config.mobsOption.passive.mooshroom = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Mule"))
                                        .binding(config.mobsOption.passive.mule, () -> config.mobsOption.passive.mule, newVal -> config.mobsOption.passive.mule = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ocelot"))
                                        .binding(config.mobsOption.passive.ocelot, () -> config.mobsOption.passive.ocelot, newVal -> config.mobsOption.passive.ocelot = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Parrot"))
                                        .binding(config.mobsOption.passive.parrot, () -> config.mobsOption.passive.parrot, newVal -> config.mobsOption.passive.parrot = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Panda"))
                                        .binding(config.mobsOption.passive.panda, () -> config.mobsOption.passive.panda, newVal -> config.mobsOption.passive.panda = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Polar Bear"))
                                        .binding(config.mobsOption.passive.polarBear, () -> config.mobsOption.passive.polarBear, newVal -> config.mobsOption.passive.polarBear = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Pig"))
                                        .binding(config.mobsOption.passive.pig, () -> config.mobsOption.passive.pig, newVal -> config.mobsOption.passive.pig = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Pufferfish"))
                                        .binding(config.mobsOption.passive.pufferfish, () -> config.mobsOption.passive.pufferfish, newVal -> config.mobsOption.passive.pufferfish = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Rabbit"))
                                        .binding(config.mobsOption.passive.rabbit, () -> config.mobsOption.passive.rabbit, newVal -> config.mobsOption.passive.rabbit = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Salmon"))
                                        .binding(config.mobsOption.passive.salmon, () -> config.mobsOption.passive.salmon, newVal -> config.mobsOption.passive.salmon = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Sheep"))
                                        .binding(config.mobsOption.passive.sheep, () -> config.mobsOption.passive.sheep, newVal -> config.mobsOption.passive.sheep = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Skeleton Horse"))
                                        .binding(config.mobsOption.passive.skellyHorse, () -> config.mobsOption.passive.skellyHorse, newVal -> config.mobsOption.passive.skellyHorse = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Sniffer"))
                                        .binding(config.mobsOption.passive.sniffer, () -> config.mobsOption.passive.sniffer, newVal -> config.mobsOption.passive.sniffer = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Snow Golem"))
                                        .binding(config.mobsOption.passive.snowGolem, () -> config.mobsOption.passive.snowGolem, newVal -> config.mobsOption.passive.snowGolem = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Squid"))
                                        .binding(config.mobsOption.passive.squid, () -> config.mobsOption.passive.squid, newVal -> config.mobsOption.passive.squid = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Strider"))
                                        .binding(config.mobsOption.passive.strider, () -> config.mobsOption.passive.strider, newVal -> config.mobsOption.passive.strider = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Tadpole"))
                                        .binding(config.mobsOption.passive.tadpole, () -> config.mobsOption.passive.tadpole, newVal -> config.mobsOption.passive.tadpole = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Tropical Fish"))
                                        .binding(config.mobsOption.passive.tropicalFish, () -> config.mobsOption.passive.tropicalFish, newVal -> config.mobsOption.passive.tropicalFish = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Turtle"))
                                        .binding(config.mobsOption.passive.turtle, () -> config.mobsOption.passive.turtle, newVal -> config.mobsOption.passive.turtle = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Villager"))
                                        .binding(config.mobsOption.passive.villager, () -> config.mobsOption.passive.villager, newVal -> config.mobsOption.passive.villager = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wandering Trader"))
                                        .binding(config.mobsOption.passive.wanderingTrader, () -> config.mobsOption.passive.wanderingTrader, newVal -> config.mobsOption.passive.wanderingTrader = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wolf"))
                                        .binding(config.mobsOption.passive.wolf, () -> config.mobsOption.passive.wolf, newVal -> config.mobsOption.passive.wolf = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Iron Golem"))
                                        .binding(config.mobsOption.passive.ironGolem, () -> config.mobsOption.passive.ironGolem, newVal -> config.mobsOption.passive.ironGolem = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())

                                .build())








                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Hostile mobs"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Blaze"))
                                        .binding(config.mobsOption.hostile.blaze, () -> config.mobsOption.hostile.blaze,
                                                newVal -> config.mobsOption.hostile.blaze = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Bogged"))
                                        .binding(config.mobsOption.hostile.bogged, () -> config.mobsOption.hostile.bogged, newVal -> config.mobsOption.hostile.bogged = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Breeze"))
                                        .binding(config.mobsOption.hostile.breeze, () -> config.mobsOption.hostile.breeze, newVal -> config.mobsOption.hostile.breeze = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cave Spider"))
                                        .binding(config.mobsOption.hostile.caveSpider, () -> config.mobsOption.hostile.caveSpider, newVal -> config.mobsOption.hostile.caveSpider = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Creeper"))
                                        .binding(config.mobsOption.hostile.creeper, () -> config.mobsOption.hostile.creeper, newVal -> config.mobsOption.hostile.creeper = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Drowned"))
                                        .binding(config.mobsOption.hostile.drowned, () -> config.mobsOption.hostile.drowned, newVal -> config.mobsOption.hostile.drowned = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Elder Guardian"))
                                        .binding(config.mobsOption.hostile.elderGuardian, () -> config.mobsOption.hostile.elderGuardian, newVal -> config.mobsOption.hostile.elderGuardian = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Enderman"))
                                        .binding(config.mobsOption.hostile.enderman, () -> config.mobsOption.hostile.enderman, newVal -> config.mobsOption.hostile.enderman = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Endermite"))
                                        .binding(config.mobsOption.hostile.endermite, () -> config.mobsOption.hostile.endermite, newVal -> config.mobsOption.hostile.endermite = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Evoker"))
                                        .binding(config.mobsOption.hostile.evoker, () -> config.mobsOption.hostile.evoker, newVal -> config.mobsOption.hostile.evoker = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ghast"))
                                        .binding(config.mobsOption.hostile.ghast, () -> config.mobsOption.hostile.ghast, newVal -> config.mobsOption.hostile.ghast = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Guardian"))
                                        .binding(config.mobsOption.hostile.guardian, () -> config.mobsOption.hostile.guardian, newVal -> config.mobsOption.hostile.guardian = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Hoglin"))
                                        .binding(config.mobsOption.hostile.hoglin, () -> config.mobsOption.hostile.hoglin, newVal -> config.mobsOption.hostile.hoglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Husk"))
                                        .binding(config.mobsOption.hostile.husk, () -> config.mobsOption.hostile.husk, newVal -> config.mobsOption.hostile.husk = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Magma Cube"))
                                        .binding(config.mobsOption.hostile.magmaCube, () -> config.mobsOption.hostile.magmaCube, newVal -> config.mobsOption.hostile.magmaCube = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Phantom"))
                                        .binding(config.mobsOption.hostile.phantom, () -> config.mobsOption.hostile.phantom, newVal -> config.mobsOption.hostile.phantom = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Piglin"))
                                        .binding(config.mobsOption.hostile.piglin, () -> config.mobsOption.hostile.piglin, newVal -> config.mobsOption.hostile.piglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Piglin Brute"))
                                        .binding(config.mobsOption.hostile.piglinBrute, () -> config.mobsOption.hostile.piglinBrute, newVal -> config.mobsOption.hostile.piglinBrute = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Pillager"))
                                        .binding(config.mobsOption.hostile.pillager, () -> config.mobsOption.hostile.pillager, newVal -> config.mobsOption.hostile.pillager = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ravager"))
                                        .binding(config.mobsOption.hostile.ravager, () -> config.mobsOption.hostile.ravager, newVal -> config.mobsOption.hostile.ravager = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Shulker"))
                                        .binding(config.mobsOption.hostile.shulker, () -> config.mobsOption.hostile.shulker, newVal -> config.mobsOption.hostile.shulker = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Silverfish"))
                                        .binding(config.mobsOption.hostile.silverfish, () -> config.mobsOption.hostile.silverfish, newVal -> config.mobsOption.hostile.silverfish = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Skeleton"))
                                        .binding(config.mobsOption.hostile.skeleton, () -> config.mobsOption.hostile.skeleton, newVal -> config.mobsOption.hostile.skeleton = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Slime"))
                                        .binding(config.mobsOption.hostile.slime, () -> config.mobsOption.hostile.slime, newVal -> config.mobsOption.hostile.slime = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Spider"))
                                        .binding(config.mobsOption.hostile.spider, () -> config.mobsOption.hostile.spider, newVal -> config.mobsOption.hostile.spider = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Stray"))
                                        .binding(config.mobsOption.hostile.stray, () -> config.mobsOption.hostile.stray, newVal -> config.mobsOption.hostile.stray = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Vex"))
                                        .binding(config.mobsOption.hostile.vex, () -> config.mobsOption.hostile.vex, newVal -> config.mobsOption.hostile.vex = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Vindicator"))
                                        .binding(config.mobsOption.hostile.vindicator, () -> config.mobsOption.hostile.vindicator, newVal -> config.mobsOption.hostile.vindicator = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Warden"))
                                        .binding(config.mobsOption.hostile.warden, () -> config.mobsOption.hostile.warden, newVal -> config.mobsOption.hostile.warden = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Witch"))
                                        .binding(config.mobsOption.hostile.witch, () -> config.mobsOption.hostile.witch, newVal -> config.mobsOption.hostile.witch = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither Skeleton"))
                                        .binding(config.mobsOption.hostile.witherSkeleton, () -> config.mobsOption.hostile.witherSkeleton, newVal -> config.mobsOption.hostile.witherSkeleton = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zoglin"))
                                        .binding(config.mobsOption.hostile.zoglin, () -> config.mobsOption.hostile.zoglin, newVal -> config.mobsOption.hostile.zoglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie"))
                                        .binding(config.mobsOption.hostile.zombie, () -> config.mobsOption.hostile.zombie, newVal -> config.mobsOption.hostile.zombie = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie Villager"))
                                        .binding(config.mobsOption.hostile.zombieVillager, () -> config.mobsOption.hostile.zombieVillager, newVal -> config.mobsOption.hostile.zombieVillager = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie Piglin"))
                                        .binding(config.mobsOption.hostile.zombiePiglin, () -> config.mobsOption.hostile.zombiePiglin, newVal -> config.mobsOption.hostile.zombiePiglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())








                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Bosses and unused mobs"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ender Dragon"))
                                        .binding(config.mobsOption.boss.dragon, () -> config.mobsOption.boss.dragon, newVal -> config.mobsOption.boss.dragon = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither"))
                                        .binding(config.mobsOption.boss.wither, () -> config.mobsOption.boss.wither, newVal -> config.mobsOption.boss.wither = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())

                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Giant"))
                                        .binding(config.mobsOption.unused.giant, () -> config.mobsOption.unused.giant, newVal -> config.mobsOption.unused.giant = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Illusioner"))
                                        .binding(config.mobsOption.unused.illusioner, () -> config.mobsOption.unused.illusioner, newVal -> config.mobsOption.unused.illusioner = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie horse"))
                                        .binding(config.mobsOption.unused.zombieHorse, () -> config.mobsOption.unused.zombieHorse, newVal -> config.mobsOption.unused.zombieHorse = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())




                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Hostile baby variants"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Drowned"))
                                        .binding(config.mobsOption.baby.drowned, () -> config.mobsOption.baby.drowned, newVal -> config.mobsOption.baby.drowned = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Hoglin"))
                                        .binding(config.mobsOption.baby.hoglin, () -> config.mobsOption.baby.hoglin, newVal -> config.mobsOption.baby.hoglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Husk"))
                                        .binding(config.mobsOption.baby.husk, () -> config.mobsOption.baby.husk, newVal -> config.mobsOption.baby.husk = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Piglin"))
                                        .binding(config.mobsOption.baby.piglin, () -> config.mobsOption.baby.piglin, newVal -> config.mobsOption.baby.piglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zoglin"))
                                        .binding(config.mobsOption.baby.zoglin, () -> config.mobsOption.baby.zoglin, newVal -> config.mobsOption.baby.zoglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie"))
                                        .binding(config.mobsOption.baby.zombie, () -> config.mobsOption.baby.zombie, newVal -> config.mobsOption.baby.zombie = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie Piglin"))
                                        .binding(config.mobsOption.baby.zombiePiglin, () -> config.mobsOption.baby.zombiePiglin, newVal -> config.mobsOption.baby.zombiePiglin = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie Villager"))
                                        .binding(config.mobsOption.baby.zombieVillager, () -> config.mobsOption.baby.zombieVillager, newVal -> config.mobsOption.baby.zombieVillager = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())



                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Projectiles"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Arrow"))
                                        .binding(config.projectilesOption.arrow, () -> config.projectilesOption.arrow, newVal -> config.projectilesOption.arrow = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Bottle XP"))
                                        .binding(config.projectilesOption.bottleXP, () -> config.projectilesOption.bottleXP, newVal -> config.projectilesOption.bottleXP = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Egg"))
                                        .binding(config.projectilesOption.egg, () -> config.projectilesOption.egg, newVal -> config.projectilesOption.egg = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ender Pearl"))
                                        .binding(config.projectilesOption.enderPearl, () -> config.projectilesOption.enderPearl, newVal -> config.projectilesOption.enderPearl = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ender Eye"))
                                        .binding(config.projectilesOption.enderEye, () -> config.projectilesOption.enderEye, newVal -> config.projectilesOption.enderEye = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Fireball"))
                                        .binding(config.projectilesOption.fireball, () -> config.projectilesOption.fireball, newVal -> config.projectilesOption.fireball = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Small Fireball"))
                                        .binding(config.projectilesOption.smallFireball, () -> config.projectilesOption.smallFireball, newVal -> config.projectilesOption.smallFireball = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Firework Rocket"))
                                        .binding(config.projectilesOption.fireworkRocket, () -> config.projectilesOption.fireworkRocket, newVal -> config.projectilesOption.fireworkRocket = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Snowball"))
                                        .binding(config.projectilesOption.snowball, () -> config.projectilesOption.snowball, newVal -> config.projectilesOption.snowball = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Splash Potion"))
                                        .binding(config.projectilesOption.splashPotion, () -> config.projectilesOption.splashPotion, newVal -> config.projectilesOption.splashPotion = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Trident"))
                                        .binding(config.projectilesOption.trident, () -> config.projectilesOption.trident, newVal -> config.projectilesOption.trident = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wind Charge"))
                                        .binding(config.projectilesOption.windCharge, () -> config.projectilesOption.windCharge, newVal -> config.projectilesOption.windCharge = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither Skull"))
                                        .binding(config.projectilesOption.witherSkull, () -> config.projectilesOption.witherSkull, newVal -> config.projectilesOption.witherSkull = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Shulker Bullet"))
                                        .binding(config.projectilesOption.shulkerBullet, () -> config.projectilesOption.shulkerBullet, newVal -> config.projectilesOption.shulkerBullet = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Fishing Bobber"))
                                        .binding(config.projectilesOption.fishingBobber, () -> config.projectilesOption.fishingBobber, newVal -> config.projectilesOption.fishingBobber = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Llama Spit"))
                                        .binding(config.projectilesOption.llamaSpit, () -> config.projectilesOption.llamaSpit, newVal -> config.projectilesOption.llamaSpit = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())



                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Other entities"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ominous item spawner"))
                                        .binding(config.othersOption.ominousItemSpawner, () -> config.othersOption.ominousItemSpawner, newVal -> config.othersOption.ominousItemSpawner = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Evoker Fangs"))
                                        .binding(config.othersOption.evokerFangs, () -> config.othersOption.evokerFangs, newVal -> config.othersOption.evokerFangs = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item"))
                                        .description(OptionDescription.of(Text.literal("Dropped item")))
                                        .binding(config.othersOption.item, () -> config.othersOption.item, newVal -> config.othersOption.item = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Falling Blocks"))
                                        .binding(config.othersOption.fallingBlocks, () -> config.othersOption.fallingBlocks, newVal -> config.othersOption.fallingBlocks = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Armor Stand"))
                                        .binding(config.othersOption.armorStand, () -> config.othersOption.armorStand, newVal -> config.othersOption.armorStand = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Boat"))
                                        .binding(config.othersOption.boat, () -> config.othersOption.boat, newVal -> config.othersOption.boat = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("End Crystal"))
                                        .binding(config.othersOption.endCrystal, () -> config.othersOption.endCrystal, newVal -> config.othersOption.endCrystal = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Experience"))
                                        .binding(config.othersOption.experience, () -> config.othersOption.experience, newVal -> config.othersOption.experience = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item Frame"))
                                        .binding(config.othersOption.itemFrame, () -> config.othersOption.itemFrame, newVal -> config.othersOption.itemFrame = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Minecart"))
                                        .description(OptionDescription.of(Text.literal("All types")))
                                        .binding(config.othersOption.minecart, () -> config.othersOption.minecart, newVal -> config.othersOption.minecart = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("TNT"))
                                        .binding(config.othersOption.tnt, () -> config.othersOption.tnt, newVal -> config.othersOption.tnt = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())


                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Invisible entities"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Display"))
                                        .description(OptionDescription.of(Text.literal("Only the look vector is visible")))
                                        .binding(config.invisibleOption.display, () -> config.invisibleOption.display, newVal -> config.invisibleOption.display = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Interaction"))
                                        .binding(config.invisibleOption.interaction, () -> config.invisibleOption.interaction, newVal -> config.invisibleOption.interaction = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())




                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Look vectors"))
                                .collapsed(true)
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Player"))
                                        .binding(config.vector.player, () -> config.vector.player, newVal -> config.vector.player = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item"))
                                        .binding(config.vector.item, () -> config.vector.item, newVal -> config.vector.item = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Boat"))
                                        .binding(config.vector.boat, () -> config.vector.boat, newVal -> config.vector.boat = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("End Crystal"))
                                        .binding(config.vector.endCrystal, () -> config.vector.endCrystal, newVal -> config.vector.endCrystal = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Experience Orb"))
                                        .binding(config.vector.experience, () -> config.vector.experience, newVal -> config.vector.experience = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item Frame"))
                                        .binding(config.vector.itemFrame, () -> config.vector.itemFrame, newVal -> config.vector.itemFrame = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Minecart"))
                                        .binding(config.vector.minecart, () -> config.vector.minecart, newVal -> config.vector.minecart = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Projectile"))
                                        .binding(config.vector.projectile, () -> config.vector.projectile, newVal -> config.vector.projectile = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Hostile Mob"))
                                        .binding(config.vector.hostileMob, () -> config.vector.hostileMob, newVal -> config.vector.hostileMob = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Passive Mob"))
                                        .binding(config.vector.passiveMob, () -> config.vector.passiveMob, newVal -> config.vector.passiveMob = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither"))
                                        .binding(config.vector.wither, () -> config.vector.wither, newVal -> config.vector.wither = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ender Dragon"))
                                        .binding(config.vector.enderDragon, () -> config.vector.enderDragon, newVal -> config.vector.enderDragon = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .build())

                        .build())
                .build()
                .generateScreen(parentScreen);

        return screen;
    }
}